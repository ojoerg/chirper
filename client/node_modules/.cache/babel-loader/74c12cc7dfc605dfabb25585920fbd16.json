{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Projects\\\\full stack\\\\complete\\\\client\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\"; // Initial State\n\nconst initialState = {\n  popup: false,\n  posts: [],\n  error: null,\n  loading: true,\n  user: \"test\"\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getPosts() {\n    try {\n      const res = await fetch(\"api/v1/posts\");\n      const posts = await res.json();\n      console.log(posts.data);\n      dispatch({\n        type: \"GET_POSTS\",\n        payload: posts.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"POST_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function togglePopup(boolVal) {\n    dispatch({\n      type: \"TOGGLE_POPUP\",\n      payload: boolVal\n    });\n  }\n\n  async function addPost(post) {\n    try {\n      const res = await fetch(\"api/v1/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n      });\n      const response = await res.json();\n      console.log(response);\n      dispatch({\n        type: \"ADD_POST\",\n        payload: response.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"POST_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n  /*function addPost(postText){\r\n        dispatch({\r\n            type: \"ADD_POST\",\r\n            payload: postText\r\n        })\r\n    }*/\n\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      popup: state.popup,\n      posts: state.posts,\n      error: state.error,\n      loading: state.loading,\n      getPosts,\n      togglePopup,\n      addPost\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Olli/Projects/full stack/complete/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","popup","posts","error","loading","user","GlobalContext","GlobalProvider","children","state","dispatch","getPosts","res","fetch","json","console","log","data","type","payload","err","response","togglePopup","boolVal","addPost","post","method","headers","body","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,KADY;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB,C,CAQA;;AACA,OAAO,MAAMC,aAAa,GAAGT,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMO,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeW,QAAf,GAA0B;AACxB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAD,CAAvB;AACA,YAAMX,KAAK,GAAG,MAAMU,GAAG,CAACE,IAAJ,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,IAAlB;AAEAP,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAEjB,KAAK,CAACe;AAFR,OAAD,CAAR;AAID,KATD,CASE,OAAOG,GAAP,EAAY;AACZV,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBd;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,WAASmB,WAAT,CAAqBC,OAArB,EAA8B;AAC5Bb,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID;;AAED,iBAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAC3B,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AACtCa,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AALgC,OAAjB,CAAvB;AAOA,YAAMJ,QAAQ,GAAG,MAAMT,GAAG,CAACE,IAAJ,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAEAX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,OAAO,EAAEE,QAAQ,CAACJ;AAFX,OAAD,CAAR;AAID,KAhBD,CAgBE,OAAOG,GAAP,EAAY;AACZV,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBd;AAFpB,OAAD,CAAR;AAID;AACF;AAED;;;;;;;;AAOA,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAEQ,KAAK,CAACR,KADR;AAELC,MAAAA,KAAK,EAAEO,KAAK,CAACP,KAFR;AAGLC,MAAAA,KAAK,EAAEM,KAAK,CAACN,KAHR;AAILC,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAJV;AAKLO,MAAAA,QALK;AAMLW,MAAAA,WANK;AAOLE,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGhB,QAVH,CADF;AAcD,CA3EM","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// Initial State\r\n\r\nconst initialState = {\r\n  popup: false,\r\n  posts: [],\r\n  error: null,\r\n  loading: true,\r\n  user: \"test\"\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  async function getPosts() {\r\n    try {\r\n      const res = await fetch(\"api/v1/posts\");\r\n      const posts = await res.json();\r\n      console.log(posts.data);\r\n\r\n      dispatch({\r\n        type: \"GET_POSTS\",\r\n        payload: posts.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"POST_ERROR\",\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  function togglePopup(boolVal) {\r\n    dispatch({\r\n      type: \"TOGGLE_POPUP\",\r\n      payload: boolVal\r\n    });\r\n  }\r\n\r\n  async function addPost(post) {\r\n    try {\r\n      const res = await fetch(\"api/v1/posts\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(post)\r\n      });\r\n      const response = await res.json();\r\n\r\n      console.log(response);\r\n\r\n      dispatch({\r\n        type: \"ADD_POST\",\r\n        payload: response.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"POST_ERROR\",\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  /*function addPost(postText){\r\n        dispatch({\r\n            type: \"ADD_POST\",\r\n            payload: postText\r\n        })\r\n    }*/\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        popup: state.popup,\r\n        posts: state.posts,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getPosts,\r\n        togglePopup,\r\n        addPost\r\n      }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}