{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Projects\\\\full stack\\\\complete\\\\client\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\"; // Initial State\n\nconst initialState = {\n  popup: false,\n  posts: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getPosts() {\n    try {\n      const res = await fetch(\"api/v1/posts\");\n      const posts = await res.json();\n      console.log(posts.data);\n      dispatch({\n        type: \"GET_POSTS\",\n        payload: posts.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"POST_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function togglePopup(boolVal) {\n    dispatch({\n      type: \"TOGGLE_POPUP\",\n      payload: boolVal\n    });\n  }\n\n  function addPost(postText) {\n    dispatch({\n      type: \"ADD_POST\",\n      payload: postText\n    });\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      popup: state.popup,\n      post: state.post,\n      error: state.error,\n      loading: state.loading,\n      getPosts,\n      togglePopup,\n      addPost\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Olli/Projects/full stack/complete/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","popup","posts","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getPosts","res","fetch","json","console","log","data","type","payload","err","response","togglePopup","boolVal","addPost","postText","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,KADY;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB,C,CAOA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAD8C,CAG9C;;AACE,iBAAeU,QAAf,GAA0B;AACtB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAD,CAAvB;AACA,YAAMV,KAAK,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,IAAlB;AAEAP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,WADD;AAELC,QAAAA,OAAO,EAAEhB,KAAK,CAACc;AAFV,OAAD,CAAR;AAKH,KAVD,CAUE,OAAOG,GAAP,EAAY;AACVV,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,YADD;AAELC,QAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBb;AAFtB,OAAD,CAAR;AAIH;AACJ;;AAED,WAASkB,WAAT,CAAqBC,OAArB,EAA6B;AACzBb,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAEI;AAFJ,KAAD,CAAR;AAIH;;AAED,WAASC,OAAT,CAAiBC,QAAjB,EAA0B;AACtBf,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,OAAO,EAAEM;AAFJ,KAAD,CAAR;AAIH;;AAEH,SACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BvB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADc;AAE3BwB,MAAAA,IAAI,EAAEjB,KAAK,CAACiB,IAFe;AAG3BtB,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAHc;AAI3BC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAJY;AAK3BM,MAAAA,QAL2B;AAM3BW,MAAAA,WAN2B;AAO3BE,MAAAA;AAP2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKhB,QATL,CADF;AAYD,CAjDM","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// Initial State\r\n\r\nconst initialState = {\r\n  popup: false,\r\n  posts: [],\r\n  error: null,\r\n  loading: true\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n    async function getPosts() {\r\n        try {\r\n            const res = await fetch(\"api/v1/posts\")\r\n            const posts = await res.json();\r\n            console.log(posts.data)\r\n            \r\n            dispatch({\r\n                type: \"GET_POSTS\",\r\n                payload: posts.data\r\n            })\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: \"POST_ERROR\",\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n   \r\n    function togglePopup(boolVal){\r\n        dispatch({\r\n            type: \"TOGGLE_POPUP\",\r\n            payload: boolVal\r\n        })\r\n    }\r\n\r\n    function addPost(postText){\r\n        dispatch({\r\n            type: \"ADD_POST\",\r\n            payload: postText\r\n        })\r\n    }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n        popup: state.popup,\r\n        post: state.post,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getPosts,\r\n        togglePopup,\r\n        addPost\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}