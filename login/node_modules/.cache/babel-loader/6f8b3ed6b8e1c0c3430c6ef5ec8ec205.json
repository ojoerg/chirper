{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Projects\\\\full stack\\\\complete\\\\login\\\\src\\\\components\\\\PageSwitch.js\";\nimport React, { useContext, useState, useEffect, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Welcome } from \"./Welcome\";\nimport { Register } from \"./Register\";\nimport { Login } from \"./Login\";\nimport { NotFound } from \"./NotFound\";\nimport { Home } from \"./Home\";\nimport { Loading } from \"./Loading\";\nimport { GlobalContext } from \"../context/GlobalState\";\nexport const PageSwitch = () => {\n  const {\n    loggedIn,\n    username,\n    checkAuthenticated\n  } = useContext(GlobalContext);\n  const [authenticatedChecked, setAuthenticatedChecked] = useState(false);\n\n  const checkAuthenticatedFunction = () => {\n    let result;\n\n    const checkAuthenticatedFunctionAsync = async () => {\n      try {\n        if (!authenticatedChecked) {\n          await setTimeout(() => checkAuthenticated(), 1000);\n          await setAuthenticatedChecked(true);\n        }\n\n        if (loggedIn === true && username !== \"\") {\n          return React.createElement(Switch, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Route, {\n            path: \"/\",\n            component: Home,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }), React.createElement(Route, {\n            component: NotFound,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(Switch, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(Route, {\n            path: \"/\",\n            exact: true,\n            component: Welcome,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }), React.createElement(Route, {\n            path: \"/register\",\n            component: Register,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), React.createElement(Route, {\n            path: \"/login\",\n            component: Login,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }), React.createElement(Route, {\n            component: NotFound,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }));\n        }\n\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n\n      return checkAuthenticatedFunctionAsync();\n    };\n  }; //, [authenticatedChecked, checkAuthenticated]);\n\n\n  const loggedInChangePage = () => {\n    /* if (loggedIn === true && username !== \"\") {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Welcome} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    }*/\n  };\n\n  return React.createElement(Suspense, {\n    fallback: Loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, checkAuthenticatedFunction()); //return <Suspense fallback={Loading}>{loggedInChangePage()}</Suspense>;\n};","map":{"version":3,"sources":["C:/Users/Olli/Projects/full stack/complete/login/src/components/PageSwitch.js"],"names":["React","useContext","useState","useEffect","Suspense","Route","Switch","Welcome","Register","Login","NotFound","Home","Loading","GlobalContext","PageSwitch","loggedIn","username","checkAuthenticated","authenticatedChecked","setAuthenticatedChecked","checkAuthenticatedFunction","result","checkAuthenticatedFunctionAsync","setTimeout","console","log","error","loggedInChangePage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAA6ChB,UAAU,CAACY,aAAD,CAA7D;AACA,QAAM,CAACK,oBAAD,EAAuBC,uBAAvB,IAAkDjB,QAAQ,CAAC,KAAD,CAAhE;;AAEA,QAAMkB,0BAA0B,GAAG,MAAM;AACvC,QAAIC,MAAJ;;AACA,UAAMC,+BAA+B,GAAG,YAAY;AAClD,UAAI;AACF,YAAI,CAACJ,oBAAL,EAA2B;AACzB,gBAAMK,UAAU,CAAC,MAAMN,kBAAkB,EAAzB,EAA6B,IAA7B,CAAhB;AACA,gBAAME,uBAAuB,CAAC,IAAD,CAA7B;AACD;;AAED,YAAIJ,QAAQ,KAAK,IAAb,IAAqBC,QAAQ,KAAK,EAAtC,EAA0C;AACxC,iBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,SAAS,EAAEL,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,KAAD;AAAO,YAAA,SAAS,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAMD,SAPD,MAOO;AACL,iBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAEH,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE,oBAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF;AAQD;;AACDc,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,OAxBD,CAwBE,OAAOK,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;;AAED,aAAOJ,+BAA+B,EAAtC;AACD,KA9BD;AAgCD,GAlCD,CAJ8B,CAsC3B;;;AAEH,QAAMK,kBAAkB,GAAG,MAAM;AAC/B;;;;;;;;;;;;;;;;;AAiBD,GAlBD;;AAoBA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEf,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BQ,0BAA0B,EAAxD,CAAP,CA5D8B,CA6D9B;AACD,CA9DM","sourcesContent":["import React, { useContext, useState, useEffect, Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Welcome } from \"./Welcome\";\r\nimport { Register } from \"./Register\";\r\nimport { Login } from \"./Login\";\r\nimport { NotFound } from \"./NotFound\";\r\nimport { Home } from \"./Home\";\r\nimport { Loading } from \"./Loading\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const PageSwitch = () => {\r\n  const { loggedIn, username, checkAuthenticated } = useContext(GlobalContext);\r\n  const [authenticatedChecked, setAuthenticatedChecked] = useState(false);\r\n\r\n  const checkAuthenticatedFunction = () => {\r\n    let result;\r\n    const checkAuthenticatedFunctionAsync = async () => {\r\n      try {\r\n        if (!authenticatedChecked) {\r\n          await setTimeout(() => checkAuthenticated(), 1000);\r\n          await setAuthenticatedChecked(true);\r\n        }\r\n\r\n        if (loggedIn === true && username !== \"\") {\r\n          return (\r\n            <Switch>\r\n              <Route path=\"/\" component={Home} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          );\r\n        } else {\r\n          return (\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Welcome} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          );\r\n        }\r\n        console.log(result)\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      return checkAuthenticatedFunctionAsync();\r\n    };\r\n\r\n  }; //, [authenticatedChecked, checkAuthenticated]);\r\n\r\n  const loggedInChangePage = () => {\r\n    /* if (loggedIn === true && username !== \"\") {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Welcome} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    }*/\r\n  };\r\n\r\n  return <Suspense fallback={Loading}>{checkAuthenticatedFunction()}</Suspense>;\r\n  //return <Suspense fallback={Loading}>{loggedInChangePage()}</Suspense>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}