{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Projects\\\\full stack\\\\complete\\\\login\\\\src\\\\components\\\\PageSwitch.js\";\nimport React, { useContext, useState, useEffect, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Welcome } from \"./Welcome\";\nimport { Register } from \"./Register\";\nimport { Login } from \"./Login\";\nimport { NotFound } from \"./NotFound\";\nimport { Home } from \"./Home\";\nimport { Loading } from \"./Loading\";\nimport { GlobalContext } from \"../context/GlobalState\";\nexport const PageSwitch = () => {\n  const {\n    loggedIn,\n    username,\n    checkAuthenticated\n  } = useContext(GlobalContext);\n  const [authenticatedChecked, setAuthenticatedChecked] = useState(false);\n\n  const checkAuthenticatedFunction = () => {\n    let result;\n\n    (async () => {\n      try {\n        if (!authenticatedChecked) {\n          await setTimeout(() => checkAuthenticated(), 1000);\n          await setAuthenticatedChecked(true);\n        }\n\n        console.log(\"test\");\n\n        const loggedInChecker = () => {\n          if (loggedIn === true && username !== \"\") {\n            result = React.createElement(Switch, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, React.createElement(Route, {\n              path: \"/\",\n              component: Home,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }), React.createElement(Route, {\n              component: NotFound,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }));\n          } else if (loggedIn === false && !authenticatedChecked) {\n            result = React.createElement(Switch, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, React.createElement(Route, {\n              path: \"/\",\n              component: Loading,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }));\n          } else {\n            result = React.createElement(Switch, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, React.createElement(Route, {\n              path: \"/\",\n              exact: true,\n              component: Welcome,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }), React.createElement(Route, {\n              path: \"/register\",\n              component: Register,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }), React.createElement(Route, {\n              path: \"/login\",\n              component: Login,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }), React.createElement(Route, {\n              component: NotFound,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }));\n          }\n        };\n\n        await loggedInChecker();\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n\n    return result;\n  }; //, [authenticatedChecked, checkAuthenticated]);\n\n\n  const loggedInChangePage = () => {\n    /* if (loggedIn === true && username !== \"\") {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Welcome} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    }*/\n  };\n\n  return React.createElement(Suspense, {\n    fallback: Loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, checkAuthenticatedFunction()); //return <Suspense fallback={Loading}>{loggedInChangePage()}</Suspense>;\n};","map":{"version":3,"sources":["C:/Users/Olli/Projects/full stack/complete/login/src/components/PageSwitch.js"],"names":["React","useContext","useState","useEffect","Suspense","Route","Switch","Welcome","Register","Login","NotFound","Home","Loading","GlobalContext","PageSwitch","loggedIn","username","checkAuthenticated","authenticatedChecked","setAuthenticatedChecked","checkAuthenticatedFunction","result","setTimeout","console","log","loggedInChecker","error","loggedInChangePage"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Welcome } from \"./Welcome\";\r\nimport { Register } from \"./Register\";\r\nimport { Login } from \"./Login\";\r\nimport { NotFound } from \"./NotFound\";\r\nimport { Home } from \"./Home\";\r\nimport { Loading } from \"./Loading\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const PageSwitch = () => {\r\n  const { loggedIn, username, checkAuthenticated } = useContext(GlobalContext);\r\n  const [authenticatedChecked, setAuthenticatedChecked] = useState(false);\r\n\r\n  const checkAuthenticatedFunction = () => {\r\n    let result;\r\n    (async () => {\r\n      try {\r\n        if (!authenticatedChecked) {\r\n          await setTimeout(() => checkAuthenticated(), 1000);\r\n          await setAuthenticatedChecked(true);\r\n        }\r\n        console.log(\"test\")\r\n\r\n        const loggedInChecker = () => {\r\n          if (loggedIn === true && username !== \"\") {\r\n            result = (\r\n              <Switch>\r\n                <Route path=\"/\" component={Home} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            );\r\n          } else if (loggedIn === false && !authenticatedChecked){\r\n            result = (\r\n            <Switch>\r\n              <Route path=\"/\" component={Loading} />\r\n            </Switch>)\r\n          }else{\r\n            result = (\r\n              <Switch>\r\n                <Route path=\"/\" exact component={Welcome} />\r\n                <Route path=\"/register\" component={Register} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            );\r\n          }\r\n        }\r\n\r\n        await loggedInChecker();\r\n        console.log(result)\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      \r\n    })();\r\n    return result;\r\n  }; //, [authenticatedChecked, checkAuthenticated]);\r\n\r\n  const loggedInChangePage = () => {\r\n    /* if (loggedIn === true && username !== \"\") {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Welcome} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      );\r\n    }*/\r\n  };\r\n\r\n  return <Suspense fallback={Loading}>{checkAuthenticatedFunction()}</Suspense>;\r\n  //return <Suspense fallback={Loading}>{loggedInChangePage()}</Suspense>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}